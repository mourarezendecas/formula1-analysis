from datetime import date, datetime

class Circuito:
    def __init__(self, nome, data):
        self.nome = nome 
        self.data = data
    
    def imprimeCircuito(self):
      print ("Circuito: ", self.nome,  ", Data: ", self.data)

list = []

list.append(Circuito("do BarÃ©m - ğŸ‡§ğŸ‡­", date(2023,3,3)))
list.append(Circuito("da ArÃ¡bia Saudita - ğŸ‡¸ğŸ‡¦", date(2023,3,17)))
list.append(Circuito("da AustrÃ¡lia - ğŸ‡¦ğŸ‡º", date(2023,3,31)))
list.append(Circuito("do AzeibarjÃ£o - ğŸ‡¦ğŸ‡¿", date(2023,4,28)))
list.append(Circuito("dos Estados Unidos - ğŸ‡ºğŸ‡¸", date(2023,5,5)))
list.append(Circuito("da ItÃ¡lia - ğŸ‡®ğŸ‡¹", date(2023,5,19)))
list.append(Circuito("de MÃ´naco - ğŸ‡²ğŸ‡¨", date(2023,5,26)))
list.append(Circuito("da Espanha - ğŸ‡ªğŸ‡¸", date(2023,6,2)))
list.append(Circuito("do CanadÃ¡ - ğŸ‡¨ğŸ‡¦", date(2023,6,16)))
list.append(Circuito("da Austria - ğŸ‡¦ğŸ‡¹", date(2023,6,30)))
list.append(Circuito("do Reino Unido - ğŸ‡¬ğŸ‡§", date(2023,7,7)))
list.append(Circuito("da Hungria - ğŸ‡­ğŸ‡º", date(2023,7,21)))
list.append(Circuito("da BÃ©lgica - ğŸ‡§ğŸ‡ª", date(2023,7,28)))
list.append(Circuito("da Holanda - ğŸ‡³ğŸ‡±", date(2023,8,25)))
list.append(Circuito("da ItÃ¡lia - ğŸ‡®ğŸ‡¹", date(2023,9,1)))
list.append(Circuito("de Singapura - ğŸ‡¸ğŸ‡¬", date(2023,9,15)))
list.append(Circuito("do JapÃ£o - ğŸ‡¯ğŸ‡µ", date(2023,9,22)))
list.append(Circuito("do Qatar - ğŸ‡¶ğŸ‡¦", date(2023,10,6)))
list.append(Circuito("dos Estados Unidos - ğŸ‡ºğŸ‡¸", date(2023,10,20)))
list.append(Circuito("do MÃ©xico - ğŸ‡²ğŸ‡½", date(2023,10,27)))
list.append(Circuito("do Brasil - ğŸ‡§ğŸ‡·", date(2023,11,3)))
list.append(Circuito("dos Estados Unidos - ğŸ‡ºğŸ‡¸", date(2023,11,16)))
list.append(Circuito("de Abu Dhabi - ğŸ‡ºğŸ‡¸", date(2023,11,24)))

def retornaGrandPrixMaisProximo():
    hoje = date.today()

    for circuito in list:
            if((circuito.data-hoje).days<0):
                list.remove(circuito)    

    if((list[0].data - hoje).days == 1):
        return(f"Falta {(list[0].data - hoje).days} dia para o Grande prÃªmio {list[0].nome}")    
    else:    
        return(f"Faltam {(list[0].data - hoje).days} dias para o Grande prÃªmio {list[0].nome}")